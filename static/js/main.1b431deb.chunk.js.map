{"version":3,"sources":["components/Btn/Button.module.css","components/Display/Display.module.css","components/Stopwatch/Stopwatch.module.css","components/Display/Display.js","components/Btn/Button.js","components/Stopwatch/Stopwatch.js","components/Stopwatch/StopwatchContainer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Display","props","className","style","watch","Math","floor","time","slice","Button","isRun","onClick","stop","btn","start","wait","reset","Stopwatch","stopwatchWrapper","StopwatchContainer","useState","setTime","setIsRun","isClick","setIsClick","useEffect","interval","setInterval","prevTime","clearInterval","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,IAAM,sB,mBCAxBD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,iBAAmB,sC,6JCetBC,EAbC,SAACC,GACb,OACI,gCACI,2CACA,sBAAKC,UAAWC,IAAMC,MAAtB,UACI,kCAAQ,IAAMC,KAAKC,MAAOL,EAAMM,KAAO,KAAW,KAAKC,OAAO,GAA9D,OACA,kCAAQ,IAAMH,KAAKC,MAAOL,EAAMM,KAAO,IAAS,KAAKC,OAAO,GAA5D,OACA,gCAAQ,IAAMH,KAAKC,MAAOL,EAAMM,KAAO,IAAQ,KAAKC,OAAO,Y,gBCK5DC,EAZA,SAACR,GACZ,OACI,gCACMA,EAAMS,MAEF,wBAAQC,QAASV,EAAMW,KAAMV,UAAWC,IAAMU,IAA9C,kBADA,wBAAQF,QAASV,EAAMa,MAAOZ,UAAWC,IAAMU,IAA/C,mBAGN,wBAAQF,QAASV,EAAMc,KAAMb,UAAWC,IAAMU,IAA9C,kBACA,wBAAQF,QAASV,EAAMe,MAAOd,UAAWC,IAAMU,IAA/C,uB,gBCOGI,EAbG,SAAC,GAA6C,IAA5CV,EAA2C,EAA3CA,KAAMG,EAAqC,EAArCA,MAAOI,EAA8B,EAA9BA,MAAOF,EAAuB,EAAvBA,KAAMI,EAAiB,EAAjBA,MAAOD,EAAU,EAAVA,KACjD,OACI,sBAAKb,UAAWC,IAAMe,iBAAtB,UACI,cAAC,EAAD,CAASX,KAAMA,IACf,cAAC,EAAD,CAAQG,MAAOA,EACPI,MAAOA,EACPF,KAAMA,EACNI,MAAOA,EACPD,KAAMA,QC4CXI,EAtDY,WAAO,IAAD,EACLC,mBAAS,GADJ,mBACtBb,EADsB,KAChBc,EADgB,OAEHD,oBAAS,GAFN,mBAEtBV,EAFsB,KAEfY,EAFe,OAGCF,oBAAS,GAHV,mBAGtBG,EAHsB,KAGbC,EAHa,KAK7BC,qBAAU,WACN,IAAIC,EAAW,KAUf,OARIhB,EACAgB,EAAWC,aAAY,WACnBN,GAAQ,SAAAO,GAAQ,OAAIA,EAAW,SAChC,KAEHC,cAAcH,GAGX,kBAAMG,cAAcH,MAC5B,CAAChB,IA6BJ,OAAO,cAAC,EAAD,CAAWH,KAAMA,EACNG,MAAOA,EACPI,MA7BJ,WACVQ,GAAS,IA6BKV,KA1BL,WACTU,GAAS,GACTD,EAAQ,IAyBML,MAtBJ,WACG,IAATT,IACAc,EAAQ,GACRC,GAAS,KAoBCP,KAhBL,WACTS,GAAW,GAEXM,YAAW,WACHP,GACAD,GAAS,GAEbE,GAAW,KACZ,SCtCIO,EAJH,WACR,OAAO,cAAC,EAAD,KCOIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b431deb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1KwId\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"watch\":\"Display_watch__3KI3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stopwatchWrapper\":\"Stopwatch_stopwatchWrapper__1-4uz\"};","import React from \"react\";\r\nimport style from \"./Display.module.css\"\r\n\r\nconst Display = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Stopwatch</h1>\r\n            <div className={style.watch}>\r\n                <span>{(\"0\" + Math.floor((props.time / 3600000) % 60)).slice(-2)}:</span>\r\n                <span>{(\"0\" + Math.floor((props.time / 60000) % 60)).slice(-2)}:</span>\r\n                <span>{(\"0\" + Math.floor((props.time / 1000) % 60)).slice(-2)}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport style from \"./Button.module.css\"\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div>\r\n            {!props.isRun\r\n                ? <button onClick={props.start} className={style.btn}>Start</button>\r\n                : <button onClick={props.stop} className={style.btn}>Stop</button>\r\n            }\r\n            <button onClick={props.wait} className={style.btn}>Wait</button>\r\n            <button onClick={props.reset} className={style.btn}>Reset</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Button;","import React from \"react\";\nimport Display from \"../Display/Display\";\nimport Button from \"../Btn/Button\";\nimport style from \"./Stopwatch.module.css\";\n\nconst Stopwatch = ({time, isRun, start, stop, reset, wait}) => {\n    return (\n        <div className={style.stopwatchWrapper}>\n            <Display time={time}/>\n            <Button isRun={isRun}\n                    start={start}\n                    stop={stop}\n                    reset={reset}\n                    wait={wait}/>\n        </div>\n    );\n}\n\nexport default Stopwatch;\n","import React, {useState, useEffect} from \"react\";\r\nimport Stopwatch from \"./Stopwatch\";\r\n\r\nconst StopwatchContainer = () => {\r\n    const [time, setTime] = useState(0); // data of stopwatch\r\n    const [isRun, setIsRun] = useState(false); // flag to start stopwatch\r\n    const [isClick, setIsClick] = useState(false); // flag on double click \"wait\" button\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n        if (isRun) {\r\n            interval = setInterval(() => {\r\n                setTime(prevTime => prevTime + 1000)\r\n            }, 1000)\r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        return () => clearInterval(interval);\r\n    }, [isRun]);\r\n\r\n    const start = () => {\r\n        setIsRun(true);\r\n    }\r\n\r\n    const stop = () => {\r\n        setIsRun(false);\r\n        setTime(0);\r\n    }\r\n\r\n    const reset = () => {\r\n        if (time !== 0 ) {\r\n            setTime(0);\r\n            setIsRun(true);\r\n        }\r\n    }\r\n\r\n    const wait = () => {\r\n        setIsClick(true);\r\n\r\n        setTimeout(() => {\r\n            if (isClick) {\r\n                setIsRun(false);\r\n            }\r\n            setIsClick(false);\r\n        }, 300);\r\n    }\r\n\r\n    return <Stopwatch time={time}\r\n                      isRun={isRun}\r\n                      start={start}\r\n                      stop={stop}\r\n                      reset={reset}\r\n                      wait={wait}/>\r\n}\r\n\r\nexport default StopwatchContainer;\r\n","import React from \"react\";\nimport './App.css';\nimport StopwatchContainer from \"./components/Stopwatch/StopwatchContainer\";\n\nconst App = () => {\n    return <StopwatchContainer/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}